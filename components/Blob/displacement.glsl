export default "#define GLSLIFY 1\n// float displacement = f(position);\nvec3 displacedPosition = position + normalize(normal) * f(position);\nvec3 displacedNormal = normalize(normal);\n\n// gen new normals\n// https://discourse.threejs.org/t/calculating-vertex-normals-after-displacement-in-the-vertex-shader/16989\nif (fixNormals == 1.0) {\n    float offset = .5 / 512.;\n    vec3 tangent = orthogonal(normal);\n    vec3 bitangent = normalize(cross(normal, tangent));\n    vec3 neighbour1 = position + tangent * offset;\n    vec3 neighbour2 = position + bitangent * offset;\n    vec3 displacedNeighbour1 = neighbour1 + normal * f(neighbour1);\n    vec3 displacedNeighbour2 = neighbour2 + normal * f(neighbour2);\n\n    // https://i.ya-webdesign.com/images/vector-normals-tangent-16.png\n    vec3 displacedTangent = displacedNeighbour1 - displacedPosition;\n    vec3 displacedBitangent = displacedNeighbour2 - displacedPosition;\n\n    // https://upload.wikimedia.org/wikipedia/commons/d/d2/Right_hand_rule_cross_product.svg\n    displacedNormal = normalize(cross(displacedTangent, displacedBitangent));\n}\n";